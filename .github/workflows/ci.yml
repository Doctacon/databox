name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: "3.12"

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .
          uv pip install mypy
          
      - name: Run ruff linting
        run: |
          source .venv/bin/activate
          ruff check . --output-format=github
          
      - name: Run ruff formatting check
        run: |
          source .venv/bin/activate
          ruff format . --check

  type-check:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .
          uv pip install mypy
          
      - name: Run mypy
        run: |
          source .venv/bin/activate
          mypy . --ignore-missing-imports

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .
          uv pip install pytest pytest-cov
          
      - name: Run pytest
        run: |
          source .venv/bin/activate
          pytest --cov=. --cov-report=xml --cov-report=html
          
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  sqlmesh-validate:
    name: Validate SQLMesh Models
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Install dependencies
        run: |
          uv venv
          uv pip install -e .
          
      - name: Validate SQLMesh models
        run: |
          source .venv/bin/activate
          cd transformations/home_team
          sqlmesh audit

  security-check:
    name: Security Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Check for secrets
        run: |
          python scripts/check_secrets.py .
          
      - name: Run pip-audit
        run: |
          uv pip install pip-audit
          source .venv/bin/activate
          pip-audit

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, sqlmesh-validate, security-check]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Build distribution
        run: |
          uv pip install build
          python -m build
          
      - name: Check distribution
        run: |
          uv pip install twine
          source .venv/bin/activate
          twine check dist/*
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/